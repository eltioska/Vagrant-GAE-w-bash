# -*- mode: ruby -*-
# vi: set ft=ruby :

# Require the reboot plugin.
require './vagrant-provision-reboot-plugin'

require 'yaml'

# Import base configuration from YAML file
ymlconfig = YAML::load(File.open("config.yml"))

# Global variables. Tailor to your projects needs.
DOMAIN = ymlconfig['domain']
IP = ymlconfig['private_ip']

Vagrant.require_version ">= 1.4.0"
Vagrant.configure("2") do |config|

    # Vbguest plugin configuration.
    config.vbguest.auto_update = true

    # Hostmanager plugin configuration.
    config.hostmanager.enabled = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
    config.hostmanager.manage_host = true

    # Every Vagrant virtual environment requires a box to build off of.
    # We're supplying the url from where the box will be fetched if it
    # doesn't already exist on the users system.
    config.vm.box = "precise64"
    # config.vm.box_url = "http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-vagrant-amd64-disk1.box"
    config.vm.box_url = "http://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box"

    # If true, then any SSH connections made inside the box will also use hosts keys (agent forwarding).
    config.ssh.forward_agent = true

    # Applying box specific settings.
    config.vm.define "gae-box", primary: true do |node|

        # Setting the hostname so it can be used in conjunction with the HostManager plugin.
        node.vm.hostname = DOMAIN;

        # Create a private network, which allows host-only access to the machine using a specific IP.
        node.vm.network :private_network, ip: IP

    end

    # Share additional folders to the guest VM.
    config.vm.synced_folder "../app", "/home/vagrant/app", type: "nfs"
    config.vm.synced_folder "storage", "/home/vagrant/storage", type: "nfs"


    # ITEMS ONLY REQUIRED ON FIRST BOOT - UNCOMMENT FOR NEW VM

    # make sure rvm and ruby are installed
    # and ruby is at least version 1.9.3
    # config.vm.provision :shell, :path => "files/install-rvm.sh",  :args => "stable"
    # config.vm.provision :shell, :path => "files/install-ruby.sh", :args => "1.9.3"

    # vagrant shell 01 (to update packages)
    # config.vm.provision :shell, :path => "files/bootstrap.sh"

    # vagrant shell 02 (to install Google AppEngine)
    # config.vm.provision :shell, :path => "files/gae.sh"

    # vagrant shell 03 (to update ubuntu stuff)
    # config.vm.provision :shell, :path => "files/update_ubuntu.sh"

    # vagrant shell 03 (to update ubuntu stuff)
    # config.vm.provision :shell, :path => "files/aliases.sh"

    # Provider specific configuration so you can fine-tune properties.
    config.vm.provider :virtualbox do |vb|
        vb.name = "appengine"
        vb.memory = 1024
    end

    # Run a reboot of a *NIX guest.
    config.vm.provision :unix_reboot

end
